{{#> base }}

{{#*inline "content-block"}}

				<!-- Box Content Explorer -->
				<div class="tab-pane show active mts" role="tabpanel" id="explorer">
					<p>access token: {{token}}</p>
					<div style="height:500px" class="pcontainer"></div>
				</div>

				<script src="https://cdn01.boxcdn.net/platform/elements/9.0.2/en-US/explorer.js"></script>
			  <link rel="stylesheet" href="https://cdn01.boxcdn.net/platform/elements/9.0.2/en-US/explorer.css" />
				<script src="https://cdn01.boxcdn.net/polyfills/core-js/2.5.3/core.min.js"></script>

<script>

var conflictsMap = new Map();
var shouldCancel = false;
var testResponseInterceptor = (response /* https://github.com/axios/axios#request-config */) => {
	if(response.type) {
			if(response.type=='error' && response.status=='409') {
				console.log(JSON.stringify(response));
				var name = response.context_info.conflicts.name;
				var conflictId = response.context_info.conflicts.id;
				conflictsMap.set(name,conflictId);
				console.log("name:" + name + " / " + "id:" + conflictId);
				//found duplicate
				//cancel request
				//console.log("returning false");
				shouldCancel = true;
			}
		}
	return response;
};
var uploadHandler = (function() {
	console.log("Upload triggered");
});
var testRequestInterceptor = (config /* https://github.com/axios/axios#response-config */) => {
	//console.log(JSON.stringify(config));
	var method = config.method;
	//config.cancelToken=source.token;
		if(shouldCancel && method=='post') {

			//var spans = document.getElementsByTagName('span');
			//var l = spans.length;
			//for (var i=0;i<l;i++) {
			//	var thisSpan = spans[i];
  		//	if ( thisSpan.innerHTML == "Cancel Uploads" ) {
      //alert("This download will be cancelled as file already exists in the folder");
			//		console.log(thisSpan.parentElement.parentElement.type);
			//		var button = thisSpan.parentElement.parentElement;
			//		button.click();
    	//}
			//}
			//source.cancel('Operation canceled by the user.');
			//config.method='get'
			//{"attributes":"{\"name\":\"dan1.jpg\",\"parent\":{\"id\":\"50774380508\"}}","file":{}}
			if(method=='post') {
				//add timestamp to name to mimic existing functionality

				var jsonRep = JSON.parse(config.data.attributes);
				console.log("map:" + JSON.stringify(conflictsMap) + " / trying to find:" + jsonRep.name);
				if(conflictsMap.get(jsonRep.name)!=null) {
					var fileName =jsonRep.name.substring(0,jsonRep.name.lastIndexOf("."));
					var ext = jsonRep.name.substring(jsonRep.name.lastIndexOf(".")+1);
					console.log(fileName + ext);
					jsonRep.name = fileName + "_" + (new Date().toISOString().substring(0, 16)) + "_." + ext;
					console.log(jsonRep.name);
					var newAttributes = JSON.stringify(jsonRep);
					config.data.attributes = newAttributes;
					console.log(config.url + " - replacing with:" + conflictsMap.get(jsonRep.name));
					var newURl = config.url.replace(conflictsMap.get(jsonRep.name) + "/","");
					config.url = newURl;
				}
				//url = url.
			}


			//config.data.name='dup.jpg';

		}
		else {
			//config.cancelToken=null;
		}
		console.log("req method:" + method);

    return config;
};

  var fileId = '{{id}}';
  var accessToken = '{{token}}';
        var contentExplorer = new Box.ContentExplorer();
	      	contentExplorer.show(fileId, accessToken, {
	            container: '.pcontainer',
							contentPreviewProps: {
									contentSidebarProps: {
          					hasMetadata: false,
        						hasSkills: true,
        						hasProperties: true,
        						hasAccessStats: true,
          					hasActivityFeed: true,
        					defaultView:'activityFeed'
      					}
							}


	       	});
	    </script>
</script>

{{/inline}}

{{/base}}
